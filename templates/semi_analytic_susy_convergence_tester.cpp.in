// ====================================================================
// This file is part of FlexibleSUSY.
//
// FlexibleSUSY is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published
// by the Free Software Foundation, either version 3 of the License,
// or (at your option) any later version.
//
// FlexibleSUSY is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with FlexibleSUSY.  If not, see
// <http://www.gnu.org/licenses/>.
// ====================================================================


#include "@ModelName@_semi_analytic_susy_convergence_tester.hpp"

#include "wrappers.hpp"

#include <array>
#include <cmath>
#include <algorithm>

namespace flexiblesusy {

#define OLD(p) ol.get_##p()
#define NEW(p) ne.get_##p()

#define OLD1(p,i) ol.get_##p()(i)
#define NEW1(p,i) ne.get_##p()(i)

#define OLD2(p,i,j) ol.get_##p(i,j)
#define NEW2(p,i,j) ne.get_##p(i,j)

#define OLD3(p,i,j,k) ol.get_##p(i,j,k)
#define NEW3(p,i,j,k) ne.get_##p(i,j,k)

#define OLD4(p,i,j,k,l) ol.get_##p(i,j,k,l)
#define NEW4(p,i,j,k,l) ne.get_##p(i,j,k,l)

@ModelName@_susy_convergence_tester<Semi_analytic>::@ModelName@_susy_convergence_tester(
   @ModelName@<Semi_analytic>* model, double accuracy_goal, const Scale_getter& sg)
   : Convergence_tester_DRbar<@ModelName@<Semi_analytic> >(model, accuracy_goal, sg)
{
}

double @ModelName@_susy_convergence_tester<Semi_analytic>::max_rel_diff() const
{
   const @ModelName@<Semi_analytic>& ol = get_last_iteration_model();
   const @ModelName@<Semi_analytic>& ne = get_current_iteration_model();

@compareFunction@
}

} // namespace flexiblesusy
