(* :Copyright:

   ====================================================================
   This file is part of FlexibleSUSY.

   FlexibleSUSY is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published
   by the Free Software Foundation, either version 3 of the License,
   or (at your option) any later version.

   FlexibleSUSY is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with FlexibleSUSY.  If not, see
   <http://www.gnu.org/licenses/>.
   ====================================================================

*)

Print["Comparing self-energy expressions generated by NPointFunctions to those from FlexibleSUSY ... "];

Needs["SARAH`"];
Needs["FlexibleSUSY`"];
Needs["Utils`"];

workingDirectory = Directory[];
SARAH`SARAH[OutputDirectory] = FileNameJoin[{workingDirectory, "Output"}];
SARAH`SARAH[InputDirectories] = {
    FileNameJoin[{workingDirectory, "sarah"}],
    ToFileName[{$sarahDir, "Models"}]
};

Start["MSSM"];

modelFile = FileNameJoin[{workingDirectory, "models", "MSSM", "FlexibleSUSY.m"}];

FlexibleSUSY`LoadModelFile[modelFile];
{susyBetaFunctions, susyBreakingBetaFunctions} = FlexibleSUSY`ReadSARAHBetaFunctions[];
allParameters = FlexibleSUSY`SetupModelParameters[susyBetaFunctions, susyBreakingBetaFunctions];

{massMatrices, Lat$massMatrices} = FlexibleSUSY`SetupMassMatrices[allParameters];
FlexibleSUSY`SetupOutputParameters[massMatrices];

templateCode = StringJoin @ Riffle[Utils`ReadLinesInFile[
		FileNameJoin[{workingDirectory, "test", "test_MSSM_npointfunctions.cpp.in"}]],
	"\n"];

hhSelfenergy = NPointFunctions`NPointFunction[
	{SARAH`HiggsBoson}, {SARAH`HiggsBoson},
	NPointFunctions`ZeroExternalMomenta -> True];

hhSelfenergyCode = NPointFunctions`CreateCXXFunctions[
	{hhSelfenergy}, {"selfenergy_hh_1loop"}][[2]];
nPointFunctionHeaders = CreateCXXHeaders[];

hhSelfenergyVertices = VerticesForNPointFunction[hhSelfenergy];

cxxDiagramsDir = FileNameJoin[{SARAH`SARAH[OutputDirectory],
	ToString[FlexibleSUSY`FSEigenstates], "CXXDiagrams"}];
createdVerticesFile = FileNameJoin[{cxxDiagramsDir, "CreatedVertices.m"}];
    
createdVertices = If[FileExistsQ[cxxDiagramsDir] === True,
	Get[cxxDiagramsDir], {}];

nPointFunctionVertices = DeleteDuplicates[Join[hhSelfenergyVertices]];
remainingVertices = Complement[nPointFunctionVertices, createdVertices];

vertexDataCode = StringJoin @ Riffle[
	CXXDiagrams`CreateVertexData /@ remainingVertices, "\n\n"];
verticesCode = CXXDiagrams`CreateVertices[remainingVertices];

code = StringReplace[templateCode, {
	"@NPointFunctions_Selfenergy_hh_1loop@" -> hhSelfenergyCode,
	"@NPointFunctions_Headers@" -> nPointFunctionHeaders,
	"@CXXDiagrams_VertexData@" -> vertexDataCode,
	"@CXXDiagrams_Vertices@" -> verticesCode
}];

fileHandle = OpenWrite[FileNameJoin[{workingDirectory, "test", "test_MSSM_npointfunctions.cpp"}]];
WriteString[fileHandle, code];
Close[fileHandle];
