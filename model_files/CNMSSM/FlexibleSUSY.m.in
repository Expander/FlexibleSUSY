
FSModelName = "@CLASSNAME@";
FSEigenstates = SARAH`EWSB;
FSDefaultSARAHModel = NMSSM;

FSBVPSolvers = { SemiAnalyticSolver };

(* CNMSSM input parameters *)

MINPAR = {
   {2, m12},
   {3, TanBeta},
   {4, Sign[vS]},
   {5, Azero}
};

EXTPAR = {
   {61, LambdaInput}
};

FSAuxiliaryParameterInfo = {
   {m0Sq,        { ParameterDimensions -> {1},
                   MassDimension -> 2 } },
   {LambdaInput, { ParameterDimensions -> {1},
                   MassDimension -> 0 } }
};

EWSBOutputParameters = { \[Kappa], vS, m0Sq };

SUSYScale = Sqrt[Product[M[Su[i]]^(Abs[ZU[i,3]]^2 + Abs[ZU[i,6]]^2), {i,6}]];

SUSYScaleFirstGuess = Sqrt[14 m12^2 - 3 m12 Azero + Azero^2];

SUSYScaleInput = {};

HighScale = g1 == g2;

HighScaleFirstGuess = 2.0 10^16;

HighScaleInput={
   {T[Ye], Azero*Ye},
   {T[Yd], Azero*Yd},
   {T[Yu], Azero*Yu},
   {mq2, UNITMATRIX[3] m0Sq},
   {ml2, UNITMATRIX[3] m0Sq},
   {md2, UNITMATRIX[3] m0Sq},
   {mu2, UNITMATRIX[3] m0Sq},
   {me2, UNITMATRIX[3] m0Sq},
   {mHu2, m0Sq},
   {mHd2, m0Sq},
   {ms2, m0Sq},
   {\[Lambda], LambdaInput},
   {T[\[Kappa]], Azero \[Kappa]},
   {T[\[Lambda]], Azero LambdaInput},
   {MassB, m12},
   {MassWB,m12},
   {MassG,m12}
};

LowScale = LowEnergyConstant[MZ];

LowScaleFirstGuess = LowEnergyConstant[MZ];

LowScaleInput = {
   {Yu, Automatic},
   {Yd, Automatic},
   {Ye, Automatic},
   {vd, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Cos[ArcTan[TanBeta]]},
   {vu, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Sin[ArcTan[TanBeta]]}
};

InitialGuessAtLowScale = {
   {vd, LowEnergyConstant[vev] Cos[ArcTan[TanBeta]]},
   {vu, LowEnergyConstant[vev] Sin[ArcTan[TanBeta]]},
   {\[Lambda], LambdaInput},
   {\[Kappa], 0.1},
   {vS, 1000},
   {m0Sq, LowEnergyConstant[MZ]^2},
   {Yu, Automatic},
   {Yd, Automatic},
   {Ye, Automatic}
};

InitialGuessAtHighScale = {};

UseHiggs2LoopNMSSM = True;
EffectiveMu = \[Lambda] vS / Sqrt[2];
EffectiveMASqr = (T[\[Lambda]] vS / Sqrt[2] + 0.5 \[Lambda] \[Kappa] vS^2) (vu^2 + vd^2) / (vu vd);

PotentialLSPParticles = { Chi, Sv, Su, Sd, Se, Cha, Glu };

DefaultPoleMassPrecision = MediumPrecision;
HighPoleMassPrecision    = {hh, Ah, Hpm};
MediumPoleMassPrecision  = {};
LowPoleMassPrecision     = {};

ExtraSLHAOutputBlocks = {
   {FlexibleSUSYOutput, NoScale,
           {{0, Hold[HighScale]},
            {1, Hold[SUSYScale]},
            {2, Hold[LowScale]} } },
   {EWSBOutputs, NoScale,
           {{1, \[Kappa]},
            {2, vS},
            {3, m0Sq} } },
   {FlexibleSUSYLowEnergy,
           {{0, FlexibleSUSYObservable`aMuon} } },
   {NMSSMRUN,
           {{1, \[Lambda]},
            {2, \[Kappa]},
            {3, T[\[Lambda]] / \[Lambda]},
            {4, T[\[Kappa]] / \[Kappa]},
            {5, \[Lambda] vS / Sqrt[2]},
            {10, ms2} } }
};

FSCalculateDecays = True;
