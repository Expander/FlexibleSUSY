
FSModelName = "@CLASSNAME@";
FSEigenstates = SARAH`EWSB;
FSDefaultSARAHModel = MSSM;

FSBVPSolvers = { SemiAnalyticSolver };

(* CMSSM input parameters, for use with semi-analytic solver *)

MINPAR = {
   {2, m12},
   {3, TanBeta},
   {5, Azero}
};

EXTPAR = {
   {23, MuInput}
};

FSAuxiliaryParameterInfo = {
   {m12,     { MassDimension -> 1} },
   {TanBeta, { MassDimension -> 0 } },
   {Azero,   { MassDimension -> 1 } },
   {MuInput, { MassDimension -> 1 } },
   {m0Sq,    { ParameterDimensions -> {1},
               MassDimension -> 2 } },
   {BMu0,    { ParameterDimensions -> {1},
               MassDimension -> 2 } }
};

EWSBOutputParameters = { BMu0, m0Sq };

TreeLevelEWSBSolution = {
   {m0Sq, ((mHd2Coeff2 vd^2 - mHu2Coeff2 vu^2) m12^2
           + (mHd2Coeff3 vd^2 - mHu2Coeff3 vu^2) m12 Azero
           + (mHd2Coeff4 vd^2 - mHu2Coeff4 vu^2) Azero^2
           + (Abs[\[Mu]]^2 + (g2^2 + GUTNormalization[g1]^2 g1^2)
              ( vd^2 + vu^2) / 8) (vd^2 - vu^2)
           - vd tadpole[1] + vu tadpole[2])
           / (mHu2Coeff1 vu^2 - mHd2Coeff1 vd^2)},
   {BMu0, vd vu ((mHd2Coeff1 + mHu2Coeff1) m0Sq
                 + (mHd2Coeff2 + mHu2Coeff2) m12^2
                 + (mHd2Coeff3 + mHu2Coeff3) m12 Azero
                 + (mHd2Coeff4 + mHu2Coeff4) Azero^2 + 2 Abs[\[Mu]]^2
                 - tadpole[1] / vd - tadpole[2] / vu)
          / (BMuCoeff1 (vd^2 + vu^2)) - BMuCoeff2 MuBV m12 / BMuCoeff1
          - BMuCoeff3 MuBV Azero / BMuCoeff1}
};

FSWeakMixingAngleInput = FSMassW;

SUSYScale = Sqrt[Product[M[Su[i]]^(Abs[ZU[i,3]]^2 + Abs[ZU[i,6]]^2), {i,6}]];

SUSYScaleFirstGuess = Sqrt[14 m12^2 - 3 m12 Azero + Azero^2];

SUSYScaleInput = {
   {\[Mu], MuInput}
};

HighScale = g1 == g2;

HighScaleFirstGuess = 2.0 10^16;

HighScaleInput = {
   {T[Ye], Azero*Ye},
   {T[Yd], Azero*Yd},
   {T[Yu], Azero*Yu},
   {mHd2, m0Sq},
   {mHu2, m0Sq},
   {mq2, UNITMATRIX[3] m0Sq},
   {ml2, UNITMATRIX[3] m0Sq},
   {md2, UNITMATRIX[3] m0Sq},
   {mu2, UNITMATRIX[3] m0Sq},
   {me2, UNITMATRIX[3] m0Sq},
   {MassB, m12},
   {MassWB,m12},
   {MassG,m12},
   {B[\[Mu]], BMu0}
};

LowScale = LowEnergyConstant[MZ];

LowScaleFirstGuess = LowEnergyConstant[MZ];

LowScaleInput = {
   {Yu, Automatic},
   {Yd, Automatic},
   {Ye, Automatic},
   {vd, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Cos[ArcTan[TanBeta]]},
   {vu, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Sin[ArcTan[TanBeta]]}
};

InitialGuessAtLowScale = {
   {vd, LowEnergyConstant[vev] Cos[ArcTan[TanBeta]]},
   {vu, LowEnergyConstant[vev] Sin[ArcTan[TanBeta]]},
   {Yu, Automatic},
   {Yd, Automatic},
   {Ye, Automatic},
   {\[Mu], MuInput},
   {m0Sq, m12^2},
   {BMu0, m12^2}
};

InitialGuessAtHighScale = {};

UseHiggs2LoopMSSM = True;
EffectiveMu = \[Mu];
UseMSSM3LoopRGEs = True;

PotentialLSPParticles = { Chi, Sv, Su, Sd, Se, Cha, Glu };

DefaultPoleMassPrecision = MediumPrecision;
HighPoleMassPrecision    = {hh, Ah, Hpm};
MediumPoleMassPrecision  = {};
LowPoleMassPrecision     = {};

ExtraSLHAOutputBlocks = {
   {FlexibleSUSYOutput, NoScale,
           {{0, Hold[HighScale]},
            {1, Hold[SUSYScale]},
            {2, Hold[LowScale]} } },
   {FlexibleSUSYLowEnergy,
           {{21, FlexibleSUSYObservable`aMuon} } },
   {EWSBOutputs, NoScale,
           {{1, BMu0},
            {2, m0Sq} } },
   {ALPHA, NoScale,
           {{ArcSin[Pole[ZH[2,2]]]}}},
   {HMIX , {{1, \[Mu]},
            {2, vu / vd},
            {3, Sqrt[vu^2 + vd^2]},
            {4, M[Ah[2]]^2},
            {101, B[\[Mu]]},
            {102, vd},
            {103, vu} } },
   {Au,    {{1, 1, T[Yu][1,1] / Yu[1,1]},
            {2, 2, T[Yu][2,2] / Yu[2,2]},
            {3, 3, T[Yu][3,3] / Yu[3,3]} } },
   {Ad,    {{1, 1, T[Yd][1,1] / Yd[1,1]},
            {2, 2, T[Yd][2,2] / Yd[2,2]},
            {3, 3, T[Yd][3,3] / Yd[3,3]} } },
   {Ae,    {{1, 1, T[Ye][1,1] / Ye[1,1]},
            {2, 2, T[Ye][2,2] / Ye[2,2]},
            {3, 3, T[Ye][3,3] / Ye[3,3]} } },
   {MSOFT, {{1, MassB},
            {2, MassWB},
            {3, MassG},
            {21, mHd2},
            {22, mHu2},
            {31, SignedAbsSqrt[ml2[1,1]]},
            {32, SignedAbsSqrt[ml2[2,2]]},
            {33, SignedAbsSqrt[ml2[3,3]]},
            {34, SignedAbsSqrt[me2[1,1]]},
            {35, SignedAbsSqrt[me2[2,2]]},
            {36, SignedAbsSqrt[me2[3,3]]},
            {41, SignedAbsSqrt[mq2[1,1]]},
            {42, SignedAbsSqrt[mq2[2,2]]},
            {43, SignedAbsSqrt[mq2[3,3]]},
            {44, SignedAbsSqrt[mu2[1,1]]},
            {45, SignedAbsSqrt[mu2[2,2]]},
            {46, SignedAbsSqrt[mu2[3,3]]},
            {47, SignedAbsSqrt[md2[1,1]]},
            {48, SignedAbsSqrt[md2[2,2]]},
            {49, SignedAbsSqrt[md2[3,3]]} } }
};

FSCalculateDecays = True;
