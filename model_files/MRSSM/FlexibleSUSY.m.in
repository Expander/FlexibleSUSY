
FSModelName = "@CLASSNAME@";

(* MRSSM input parameters *)

MINPAR = { {3, TanBeta} };

EWSBOutputParameters = { mHd2, mHu2, mS2, mT2 };

SUSYScale = 1000;

SUSYScaleFirstGuess = 1000;

(* the other model parameters will be input at the susy scale
   automatically *)
SUSYScaleInput = {};

LowScale = SM[MZ];

LowScaleFirstGuess = SM[MZ];

LowScaleInput = {
    {Yu, Automatic},
    {Yd, Automatic},
    {Ye, Automatic},
    {vd, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Cos[ArcTan[TanBeta]]},
    {vu, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Sin[ArcTan[TanBeta]]}
};

InitialGuessAtLowScale = {
   {vd, SM[vev] Cos[ArcTan[TanBeta]]},
   {vu, SM[vev] Sin[ArcTan[TanBeta]]},
   {Yu, Automatic},
   {Yd, Automatic},
   {Ye, Automatic}
};

OnlyLowEnergyFlexibleSUSY = True;

PotentialLSPParticles = { Chi, Su, Sd, Se, Cha1, Cha2 };

(* Workaround:  SARAH 4.2.2 defines Weinberg angle as

     {ThetaW, { Description -> "Weinberg-Angle",
                DependenceNum -> None,
                Value -> 0.511621}},

   However, we currently need its analytic expression in terms
   of MW and MZ.
 *)
SARAH`ParameterDefinitions = Append[
    Cases[SARAH`ParameterDefinitions, {p_ /; p =!= SARAH`ThetaW, ___}],
    {SARAH`ThetaW,
     { Description -> "Weinberg-Angle",
       DependenceNum -> ArcSin[Sqrt[1 - (Mass[VWm]^2 - g2^2*vT^2)/Mass[VZ]^2]]}}
];
