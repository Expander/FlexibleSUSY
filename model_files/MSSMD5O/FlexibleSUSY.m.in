
FSModelName = "@CLASSNAME@";
FSEigenstates = SARAH`EWSB;
FSDefaultSARAHModel = MSSMD5O;

(* CMSSMRHN input parameters *)

MINPAR = { {1, m0},
           {2, m12},
           {3, TanBeta},
           {4, Sign[\[Mu]]},
           {5, Azero}
         };

EXTPAR = {
	   {1, mv1},
	   {2, mv2},
	   {3, mv3},
	   {4, ThetaV12},
	   {5, ThetaV13},
	   {6, ThetaV23},
	   {7, YvDiag1},
	   {8, YvDiag2},
	   {9, YvDiag3}
    };

EWSBOutputParameters = { B[\[Mu]], \[Mu] };

SUSYScale = Sqrt[Product[M[Su[i]]^(Abs[ZU[i,3]]^2 + Abs[ZU[i,6]]^2), {i,6}]];

SUSYScaleFirstGuess = Sqrt[m0^2 + 4 m12^2];

SUSYScaleInput = {};

HighScale = g1 == g2;

HighScaleFirstGuess = 2.0 10^16;

HighScaleInput={
   {T[Ye], Azero*Ye},
   {T[Yd], Azero*Yd},
   {T[Yu], Azero*Yu},
   {mq2, UNITMATRIX[3] m0^2},
   {ml2, UNITMATRIX[3] m0^2},
   {md2, UNITMATRIX[3] m0^2},
   {mu2, UNITMATRIX[3] m0^2},
   {me2, UNITMATRIX[3] m0^2},
   {mHu2, m0^2},
   {mHd2, m0^2},
   {MassB, m12},
   {MassWB,m12},
   {MassG,m12},
   {Q[WOp], ZEROMATRIX[3,3]}
};

LowScale = LowEnergyConstant[MZ];

LowScaleFirstGuess = LowEnergyConstant[MZ];

UPMNS = Module[{
	s12 = Sin @ ThetaV12, c12 = Cos @ ThetaV12,
	s13 = Sin @ ThetaV13, c13 = Cos @ ThetaV13,
	s23 = Sin @ ThetaV23, c23 = Cos @ ThetaV23
    },
    {{  c12 c13              ,  s12 c13              , s13     },
     { -s12 c23 - c12 s23 s13,  c12 c23 - s12 s23 s13, s23 c13 },
     {  s12 s23 - c12 c23 s13, -c12 s23 - s12 c23 s13, c23 c13 }}
];

mv = conj[UPMNS].DiagonalMatrix[{mv1, mv2, mv3}].Transpose[conj @ UPMNS];

LowScaleInput = Join[{
   {Yu, Automatic},
   {Yd, Automatic},
   {Ye, Automatic},
   {vd, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Cos[ArcTan[TanBeta]]},
   {vu, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Sin[ArcTan[TanBeta]]}},
   Flatten[Table[{WOp[i,j], mv[[i,j]] / (vu/Sqrt[2])^2}, {i,3}, {j,3}], 1]];

InitialGuessAtLowScale = With[{
   vdGuess = LowEnergyConstant[vev] Cos[ArcTan[TanBeta]],
   vuGuess = LowEnergyConstant[vev] Sin[ArcTan[TanBeta]]},
Join[{
   {vd, vdGuess},
   {vu, vuGuess},
   {Yu, Automatic},
   {Yd, Automatic},
   {Ye, Automatic}},
   Flatten[Table[{WOp[i,j], mv[[i,j]] / (vuGuess/Sqrt[2])^2}, {i,3}, {j,3}], 1]]
];

InitialGuessAtHighScale = {
   {\[Mu]   , 1.0},
   {B[\[Mu]], 0.0}
};

DefaultPoleMassPrecision = MediumPrecision;
HighPoleMassPrecision    = {hh, Ah, Hpm};
MediumPoleMassPrecision  = {};
LowPoleMassPrecision     = {};

FSCalculateDecays = True;
FSDecayParticles = {hh, Ah, Hpm, Su, Sd, Se, Sv};
