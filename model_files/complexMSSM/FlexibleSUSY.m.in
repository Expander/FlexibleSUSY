
FSModelName = "@CLASSNAME@";
FSEigenstates = SARAH`EWSB;
FSDefaultSARAHModel = MSSM;

(* CMSSM input parameters *)

MINPAR = {
    {3, TanBeta},
    {4, CosPhi}
};

EXTPAR = {
    {0, Qin},
    {1, Phase[\[Mu]]},
    {21, mHd2IN},
    {22, mHu2IN},
    {100, ImMassBIN},
    {200, ImMassWBIN},
    {300, ImMassGIN}
};

FSAuxiliaryParameterInfo = {
    {Aeij,   { LesHouches -> AEIN,
               ParameterDimensions -> {3,3}, (* 3x3 matrix *)
               InputParameter -> True
             } },
    {Adij,   { LesHouches -> ADIN,
               ParameterDimensions -> {3,3}, (* 3x3 matrix *)
               InputParameter -> True
             } },
    {Auij,   { LesHouches -> AUIN,
               ParameterDimensions -> {3,3}, (* 3x3 matrix *)
               InputParameter -> True
             } },
    {ImAeij, { LesHouches -> IMAEIN,
               ParameterDimensions -> {3,3}, (* 3x3 matrix *)
               InputParameter -> True
             } },
    {ImAdij, { LesHouches -> IMADIN,
               ParameterDimensions -> {3,3}, (* 3x3 matrix *)
               InputParameter -> True
             } },
    {ImAuij, { LesHouches -> IMAUIN,
               ParameterDimensions -> {3,3}, (* 3x3 matrix *)
               InputParameter -> True
             } }
};

RealParameters = { B[\[Mu]] };

EWSBOutputParameters = { B[\[Mu]], \[Mu] };

SUSYScale = Sqrt[Product[M[Su[i]]^(Abs[ZU[i,3]]^2 + Abs[ZU[i,6]]^2), {i,6}]];

SUSYScaleFirstGuess = LowEnergyConstant[MZ];

SUSYScaleInput = {
    {Phase[\[Mu]], Exp[I ArcCos[CosPhi]]}
};

HighScale = Qin;

HighScaleFirstGuess = Qin;

HighScaleInput = {
   {T[Ye], Aeij*Ye + I ImAeij*Ye},
   {T[Yd], Adij*Yd + I ImAdij*Yd},
   {T[Yu], Auij*Yu + I ImAuij*Yu},
   {mHd2, mHd2IN},
   {mHu2, mHu2IN},
   {mq2, LHInput[mq2]},
   {ml2, LHInput[ml2]},
   {md2, LHInput[md2]},
   {mu2, LHInput[mu2]},
   {me2, LHInput[me2]},
   {MassB, LHInput[MassB]  + I ImMassBIN },
   {MassWB,LHInput[MassWB] + I ImMassWBIN},
   {MassG, LHInput[MassG]  + I ImMassGIN }
};

LowScale = LowEnergyConstant[MZ];

LowScaleFirstGuess = LowEnergyConstant[MZ];

LowScaleInput = {
   {Yu, Automatic},
   {Yd, Automatic},
   {Ye, Automatic},
   {vd, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Cos[ArcTan[TanBeta]]},
   {vu, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Sin[ArcTan[TanBeta]]}
};

InitialGuessAtLowScale = {
   {vd, LowEnergyConstant[vev] Cos[ArcTan[TanBeta]]},
   {vu, LowEnergyConstant[vev] Sin[ArcTan[TanBeta]]},
   {Yu, Automatic},
   {Yd, Automatic},
   {Ye, Automatic}
};

InitialGuessAtHighScale = {
   {\[Mu]   , 1.0},
   {B[\[Mu]], 0.0}
};

UseHiggs2LoopMSSM = True;
EffectiveMu = \[Mu];

PotentialLSPParticles = { Chi, Sv, Su, Sd, Se, Cha, Glu };

DefaultPoleMassPrecision = MediumPrecision;
HighPoleMassPrecision    = {hh, Ah, Hpm};
MediumPoleMassPrecision  = {};
LowPoleMassPrecision     = {};

ExtraSLHAOutputBlocks = {
   {FlexibleSUSYOutput, NoScale,
           {{0, Hold[HighScale]},
            {1, Hold[SUSYScale]},
            {2, Hold[LowScale]} } },
   {ALPHA, NoScale,
           {{ArcSin[Pole[ZH[2,2]]]}}},
   {HMIX , {{1, Re[\[Mu]]},
            {2, vu / vd},
            {3, Sqrt[vu^2 + vd^2]},
            {4, M[Ah[2]]^2},
            {101, Re[B[\[Mu]]]},
            {102, vd},
            {103, vu} } },
   {ImHMIX,{{1, Im[\[Mu]]},
            {101, Im[B[\[Mu]]]} } },
   {Au,    {{1, 1, Re[T[Yu][1,1] / Yu[1,1]]},
            {2, 2, Re[T[Yu][2,2] / Yu[2,2]]},
            {3, 3, Re[T[Yu][3,3] / Yu[3,3]]} } },
   {Ad,    {{1, 1, Re[T[Yd][1,1] / Yd[1,1]]},
            {2, 2, Re[T[Yd][2,2] / Yd[2,2]]},
            {3, 3, Re[T[Yd][3,3] / Yd[3,3]]} } },
   {Ae,    {{1, 1, Re[T[Ye][1,1] / Ye[1,1]]},
            {2, 2, Re[T[Ye][2,2] / Ye[2,2]]},
            {3, 3, Re[T[Ye][3,3] / Ye[3,3]]} } },
   {ImAu,  {{1, 1, Im[T[Yu][1,1] / Yu[1,1]]},
            {2, 2, Im[T[Yu][2,2] / Yu[2,2]]},
            {3, 3, Im[T[Yu][3,3] / Yu[3,3]]} } },
   {ImAd,  {{1, 1, Im[T[Yd][1,1] / Yd[1,1]]},
            {2, 2, Im[T[Yd][2,2] / Yd[2,2]]},
            {3, 3, Im[T[Yd][3,3] / Yd[3,3]]} } },
   {ImAe,  {{1, 1, Im[T[Ye][1,1] / Ye[1,1]]},
            {2, 2, Im[T[Ye][2,2] / Ye[2,2]]},
            {3, 3, Im[T[Ye][3,3] / Ye[3,3]]} } },
   {MSOFT, {{1, Re[MassB]},
            {2, Re[MassWB]},
            {3, Re[MassG]},
            {21, mHd2},
            {22, mHu2},
            {31, SignedAbsSqrt[Re[ml2[1,1]]]},
            {32, SignedAbsSqrt[Re[ml2[2,2]]]},
            {33, SignedAbsSqrt[Re[ml2[3,3]]]},
            {34, SignedAbsSqrt[Re[me2[1,1]]]},
            {35, SignedAbsSqrt[Re[me2[2,2]]]},
            {36, SignedAbsSqrt[Re[me2[3,3]]]},
            {41, SignedAbsSqrt[Re[mq2[1,1]]]},
            {42, SignedAbsSqrt[Re[mq2[2,2]]]},
            {43, SignedAbsSqrt[Re[mq2[3,3]]]},
            {44, SignedAbsSqrt[Re[mu2[1,1]]]},
            {45, SignedAbsSqrt[Re[mu2[2,2]]]},
            {46, SignedAbsSqrt[Re[mu2[3,3]]]},
            {47, SignedAbsSqrt[Re[md2[1,1]]]},
            {48, SignedAbsSqrt[Re[md2[2,2]]]},
            {49, SignedAbsSqrt[Re[md2[3,3]]]} } },
   {ImMSOFT,
           {{1, Im[MassB]},
            {2, Im[MassWB]},
            {3, Im[MassG]},
            {31, SignedAbsSqrt[Im[ml2[1,1]]]},
            {32, SignedAbsSqrt[Im[ml2[2,2]]]},
            {33, SignedAbsSqrt[Im[ml2[3,3]]]},
            {34, SignedAbsSqrt[Im[me2[1,1]]]},
            {35, SignedAbsSqrt[Im[me2[2,2]]]},
            {36, SignedAbsSqrt[Im[me2[3,3]]]},
            {41, SignedAbsSqrt[Im[mq2[1,1]]]},
            {42, SignedAbsSqrt[Im[mq2[2,2]]]},
            {43, SignedAbsSqrt[Im[mq2[3,3]]]},
            {44, SignedAbsSqrt[Im[mu2[1,1]]]},
            {45, SignedAbsSqrt[Im[mu2[2,2]]]},
            {46, SignedAbsSqrt[Im[mu2[3,3]]]},
            {47, SignedAbsSqrt[Im[md2[1,1]]]},
            {48, SignedAbsSqrt[Im[md2[2,2]]]},
            {49, SignedAbsSqrt[Im[md2[3,3]]]} } }
};

FSCalculateDecays = True;
