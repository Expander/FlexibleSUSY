FSModelName = "@CLASSNAME@";
FSEigenstates = SARAH`EWSB;
FSDefaultSARAHModel = MRSSM;
AutomaticInputAtMSUSY = False;
OnlyLowEnergyFlexibleSUSY = True;
FlexibleEFTHiggs = True;

MINPAR = {
    {3, TanBeta}
};

EXTPAR = {
    {0, MS}
};

EWSBOutputParameters = { mHd2, mHu2, vS, vT };
FSSolveEWSBTreeLevelFor = EWSBOutputParameters;

SUSYScale = MS;

SUSYScaleFirstGuess = MS;

SUSYScaleInput = {
    {vu, Sqrt[vu^2 + vd^2] Sin[ArcTan[TanBeta]]},
    {vd, Sqrt[vu^2 + vd^2] Cos[ArcTan[TanBeta]]},
    {mq2   , LHInput[mq2]},
    {mu2   , LHInput[mu2]},
    {md2   , LHInput[md2]},
    {ml2   , LHInput[ml2]},
    {me2   , LHInput[me2]},
    {mS2   , LHInput[mS2]},
    {mT2   , LHInput[mT2]},
    {moc2  , LHInput[moc2]},
    {mRd2  , LHInput[mRd2]},
    {mRu2  , LHInput[mRu2]},
    {B[\[Mu]], LHInput[B[\[Mu]]]},
    {LamSD , SARAH`LHInput[LamSD]},
    {LamSU , SARAH`LHInput[LamSU]},
    {LamTD , SARAH`LHInput[LamTD]},
    {LamTU , SARAH`LHInput[LamTU]},
    {MDBS  , LHInput[MDBS] },
    {MDGoc , LHInput[MDGoc]},
    {MDWBT , LHInput[MDWBT]},
    {MuD   , LHInput[MuD]},
    {MuU   , LHInput[MuU]},
    {\[Mu] , 0}, (* non-zero Mu would break R-symmetry *)
    {B[MuD], 0}, (* non-zero B[MuD] would break R-symmetry *)
    {B[MuU], 0}  (* non-zero B[MuU] would break R-symmetry *)
};

InitialGuessAtSUSYScale = {
    {vu, LowEnergyConstant[vev] Sin[ArcTan[TanBeta]]},
    {vd, LowEnergyConstant[vev] Cos[ArcTan[TanBeta]]},
    {mq2   , LHInput[mq2]},
    {mu2   , LHInput[mu2]},
    {md2   , LHInput[md2]},
    {ml2   , LHInput[ml2]},
    {me2   , LHInput[me2]},
    {mS2   , LHInput[mS2]},
    {mT2   , LHInput[mT2]},
    {moc2  , LHInput[moc2]},
    {mRd2  , LHInput[mRd2]},
    {mRu2  , LHInput[mRu2]},
    {B[\[Mu]], LHInput[B[\[Mu]]]},
    {LamSD , SARAH`LHInput[LamSD]},
    {LamSU , SARAH`LHInput[LamSU]},
    {LamTD , SARAH`LHInput[LamTD]},
    {LamTU , SARAH`LHInput[LamTU]},
    {MDBS  , LHInput[MDBS] },
    {MDGoc , LHInput[MDGoc]},
    {MDWBT , LHInput[MDWBT]},
    {MuD   , LHInput[MuD]},
    {MuU   , LHInput[MuU]},
    {\[Mu] , 0}, (* non-zero Mu would break R-symmetry *)
    {B[MuD], 0}, (* non-zero B[MuD] would break R-symmetry *)
    {B[MuU], 0}  (* non-zero B[MuU] would break R-symmetry *)
};

(* VEV is the SM-like VEV in the MRSSM *)
MatchingScaleInput = {
    {vu, VEV Sin[ArcTan[vu/vd]]},
    {vd, VEV Cos[ArcTan[vu/vd]]}
};

LowScale = LowEnergyConstant[MZ];

LowScaleFirstGuess = LowEnergyConstant[MZ];

(* N.B. LowScaleinput is not used by the EFTHiggs spectrum
 calculation, but is needed for decoupling scheme used by
 FlexibleDecay *)

LowScaleInput = {
    {Yu, Automatic},
    {Yd, Automatic},
    {Ye, Automatic},
    {vd, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Cos[ArcTan[TanBeta]]},
    {vu, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Sin[ArcTan[TanBeta]]}
};

DefaultPoleMassPrecision = HighPrecision;
HighPoleMassPrecision    = {hh, Ah, Hpm};
MediumPoleMassPrecision  = {};
LowPoleMassPrecision     = {};

ExtraSLHAOutputBlocks = {
   {FlexibleSUSYLowEnergy,
           {{21, FlexibleSUSYObservable`aMuon} } }
};

FSCalculateDecays = True;
