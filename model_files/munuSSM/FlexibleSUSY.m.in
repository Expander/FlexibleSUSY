
FSModelName = "@CLASSNAME@";
FSEigenstates = SARAH`EWSB;
FSDefaultSARAHModel = munuSSM;

(* CNMSSM input parameters *)

MINPAR = {
    {1, m0},
    {2, m12},
    {3, TanBeta},
    {5, Azero}
};

EXTPAR = {
    {61, LambdaInput},
    {62, KappaInput},
    {65, vRInput},
    {200, vL1Input},
    {201, vL2Input},
    {202, vL3Input}
};

EWSBOutputParameters = {mlHd2[1], mlHd2[2], mlHd2[3], mHd2, mHu2, mv2};

FSSolveEWSBTreeLevelFor = EWSBOutputParameters;

SUSYScale = Sqrt[Product[M[Su[i]]^(Abs[ZU[i,3]]^2 + Abs[ZU[i,6]]^2), {i,6}]];

SUSYScaleFirstGuess = Sqrt[m0^2 + 4 m12^2];

SUSYScaleInput = {
    {Yv, LHInput[Yv]},
    {vL[1], vL1Input},
    {vL[2], vL2Input},
    {vL[3], vL3Input},
    {vR, vRInput},
    {\[Kappa], KappaInput}
};

HighScale = g1 == g2;

HighScaleFirstGuess = 1.0 10^16;

HighScaleInput = {
   {T[Ye], Azero*Ye},
   {T[Yd], Azero*Yd},
   {T[Yu], Azero*Yu},
   {T[Yv], Azero*Yv},
   {mq2, UNITMATRIX[3] m0^2},
   {ml2, UNITMATRIX[3] m0^2},
   {md2, UNITMATRIX[3] m0^2},
   {mu2, UNITMATRIX[3] m0^2},
   {me2, UNITMATRIX[3] m0^2},
   {\[Lambda], LambdaInput},
   {T[\[Kappa]], Azero \[Kappa]},
   {T[\[Lambda]], Azero LambdaInput},
   {MassB, m12},
   {MassWB,m12},
   {MassG, m12}
};

LowScale = LowEnergyConstant[MZ];

LowScaleFirstGuess = LowEnergyConstant[MZ];

LowScaleInput = {
   {Yu, Automatic},
   {Yd, Automatic},
   {Ye, Tp[Sqrt[2] downLeptonsDRbar / vd]},
   {vd, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Cos[ArcTan[TanBeta]]},
   {vu, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Sin[ArcTan[TanBeta]]}
};

InitialGuessAtLowScale = {
   {vd, LowEnergyConstant[vev] Cos[ArcTan[TanBeta]]},
   {vu, LowEnergyConstant[vev] Sin[ArcTan[TanBeta]]},
   {vR, LowEnergyConstant[vev]},
   {\[Lambda], LambdaInput},
   {\[Kappa], 0.1},
   {Yu, Automatic},
   {Yd, Automatic},
   {Ye, Tp[Sqrt[2] downLeptonsDRbar / vd]}
};

InitialGuessAtHighScale = {};

UseHiggs2LoopNMSSM = False;
EffectiveMu =.;

PotentialLSPParticles = { Chi, Su, Sd, Cha, Glu };

DefaultPoleMassPrecision = MediumPrecision;
HighPoleMassPrecision    = {hh, Ah, Hpm};
MediumPoleMassPrecision  = {};
LowPoleMassPrecision     = {};

FSCalculateDecays = True;
