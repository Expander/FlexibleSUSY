FSModelName = "@CLASSNAME@";
FSEigenstates = SARAH`EWSB;
FSDefaultSARAHModel = E6SSM;
OnlyLowEnergyFlexibleSUSY = True;
FlexibleEFTHiggs = True;

EXTPAR = {
    {0, MSUSY},
    {1, M1Input},
    {2, M2Input},
    {3, M3Input},
    {4, MuInput},
    {5, mAInput},
    {25, TanBeta},
    {61, LambdaInput},
    {71, gNInput},
    {72, M4Input},
    {73, mHp2Input},
    {74, mHpbar2Input},
    {75, MuPrInput},
    {76, BMuPrInput}
};

FSAuxiliaryParameterInfo = {
    {AeInput,        { LesHouches -> AEIN,
                       ParameterDimensions -> {3,3},
                       InputParameter -> True
                     } },
    {AdInput,        { LesHouches -> ADIN,
                       ParameterDimensions -> {3,3},
                       InputParameter -> True
                     } },
    {AuInput,        { LesHouches -> AUIN,
                       ParameterDimensions -> {3,3},
                       InputParameter -> True
                     } },
    {ml2Input,       { LesHouches -> MSL2IN,
                       ParameterDimensions -> {3,3},
                       InputParameter -> True
                     } },
    {me2Input,       { LesHouches -> MSE2IN,
                       ParameterDimensions -> {3,3},
                       InputParameter -> True
                     } },
    {mq2Input,       { LesHouches -> MSQ2IN,
                       ParameterDimensions -> {3,3},
                       InputParameter -> True
                     } },
    {md2Input,       { LesHouches -> MSD2IN,
                       ParameterDimensions -> {3,3},
                       InputParameter -> True
                     } },
    {mu2Input,       { LesHouches -> MSU2IN,
                       ParameterDimensions -> {3,3},
                       InputParameter -> True
                     } },
    {Lambda12Input,  { LesHouches -> LAMBDA12IN,
                       ParameterDimensions -> {2,2},
                       InputParameter -> True
                     } },
    {ALambda12Input, { LesHouches -> ALAMBDA12IN,
                       ParameterDimensions -> {2,2},
                       InputParameter -> True
                     } },
    {KappaInput,     { LesHouches -> KAPPAIN,
                       ParameterDimensions -> {3,3},
                       InputParameter -> True
                     } },
    {AKappaInput,    { LesHouches -> AKAPPAIN,
                       ParameterDimensions -> {3,3},
                       InputParameter -> True
                     } },
    {mDx2Input,      { LesHouches -> MDX2IN,
                       ParameterDimensions -> {3,3},
                       InputParameter -> True
                     } },
    {mDxbar2Input,   { LesHouches -> MDXBAR2IN,
                       ParameterDimensions -> {3,3},
                       InputParameter -> True
                     } },
    {mH1I2Input,     { LesHouches -> MH1I2IN,
                       ParameterDimensions -> {2,2},
                       InputParameter -> True
                     } },
    {mH2I2Input,     { LesHouches -> MH2I2IN,
                       ParameterDimensions -> {2,2},
                       InputParameter -> True
                     } },
    {msI2Input,      { LesHouches -> MSI2IN,
                       ParameterDimensions -> {2,2},
                       InputParameter -> True
                     } }
};

EWSBOutputParameters = { mHd2, mHu2, ms2 };

SUSYScale = MSUSY;

SUSYScaleFirstGuess = MSUSY;

SUSYScaleInput = {
    {vu, Sqrt[vu^2 + vd^2] Sin[ArcTan[TanBeta]]},
    {vd, Sqrt[vu^2 + vd^2] Cos[ArcTan[TanBeta]]},
    {gN, gNInput},
    {MassB, M1Input},
    {MassWB, M2Input},
    {MassG, M3Input},
    {MassBp, M4Input},
    {mq2, mq2Input},
    {mu2, mu2Input},
    {md2, md2Input},
    {ml2, ml2Input},
    {me2, me2Input},
    {mDx2, mDx2Input},
    {mDxbar2, mDxbar2Input},
    {mH1I2, mH1I2Input},
    {mH2I2, mH2I2Input},
    {msI2, msI2Input},
    {mHp2, mHp2Input},
    {mHpbar2, mHpbar2Input},
    {B[\[Mu]Pr], BMuPrInput},
    {\[Mu]Pr, MuPrInput},
    {\[Kappa], KappaInput},
    {\[Lambda]12, Lambda12Input},
    {\[Lambda], LambdaInput},
    {T[\[Kappa]], AKappaInput KappaInput},
    {T[\[Lambda]12], ALambda12Input Lambda12Input},
    {vs, Sqrt[2] MuInput/LambdaInput},
    {T[\[Lambda]], Sqrt[2] mAInput^2 / (vs (TanBeta + 1/TanBeta))},
    {T[Yu], AuInput Yu},
    {T[Yd], AdInput Yd},
    {T[Ye], AeInput Ye}
};

InitialGuessAtSUSYScale = {
    {vu, LowEnergyConstant[vev] Sin[ArcTan[TanBeta]]},
    {vd, LowEnergyConstant[vev] Cos[ArcTan[TanBeta]]},
    {gN, gNInput},
    {MassB, M1Input},
    {MassWB, M2Input},
    {MassG, M3Input},
    {MassBp, M4Input},
    {mq2, mq2Input},
    {mu2, mu2Input},
    {md2, md2Input},
    {ml2, ml2Input},
    {me2, me2Input},
    {mDx2, mDx2Input},
    {mDxbar2, mDxbar2Input},
    {mH1I2, mH1I2Input},
    {mH2I2, mH2I2Input},
    {msI2, msI2Input},
    {mHp2, mHp2Input},
    {mHpbar2, mHpbar2Input},
    {B[\[Mu]Pr], BMuPrInput},
    {\[Mu]Pr, MuPrInput},
    {\[Kappa], KappaInput},
    {\[Lambda]12, Lambda12Input},
    {\[Lambda], LambdaInput},
    {T[\[Kappa]], AKappaInput KappaInput},
    {T[\[Lambda]12], ALambda12Input Lambda12Input},
    {vs, Sqrt[2] MuInput/LambdaInput},
    {T[\[Lambda]], Sqrt[2] mAInput^2 / (vs (TanBeta + 1/TanBeta))},
    {T[Yu], AuInput Yu},
    {T[Yd], AdInput Yd},
    {T[Ye], AeInput Ye}
};

MatchingScaleInput = {
    {vu, VEV Sin[ArcTan[vu/vd]]},
    {vd, VEV Cos[ArcTan[vu/vd]]}
};

LowScale = LowEnergyConstant[MZ];

LowScaleFirstGuess = LowEnergyConstant[MZ];

(* N.B. LowScaleinput is not used by the EFTHiggs spectrum
 calculation, but is needed for decoupling scheme used by
 FlexibleDecay *)

LowScaleInput={
   {Yu, Automatic},
   {Yd, Automatic},
   {Ye, Automatic},
   {vd, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Cos[ArcTan[TanBeta]]},
   {vu, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Sin[ArcTan[TanBeta]]}
};

UseHiggs2LoopNMSSM = True;
EffectiveMu =  \[Lambda] vs / Sqrt[2];
EffectiveMASqr = T[\[Lambda]] vs / Sqrt[2] (vu^2 + vd^2) / (vu vd);

PotentialLSPParticles = { Chi, Sv, Su, Sd, Se, Cha, Glu };

DefaultPoleMassPrecision = HighPrecision;
HighPoleMassPrecision    = {hh, Ah, Hpm};
MediumPoleMassPrecision  = {};
LowPoleMassPrecision     = {};

ExtraSLHAOutputBlocks = {
   {FlexibleSUSYLowEnergy,
           {{21, FlexibleSUSYObservable`aMuon} } }
};

FSCalculateDecays = True;
